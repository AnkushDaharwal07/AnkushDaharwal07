name: Run Script on Push

on:
  pull_request:
    branches:
      - main

jobs:
  run_script:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          ref: main
        
      - name: Get PR Branch Name
        id: get_pr_branch
        run: echo "::set-output name=branch::$(echo $GITHUB_REF | awk -F'/' '{print $3}')"

      # - name: Compare functions.yaml
      #   id: compare
      #   run: |
      #     PR_BRANCH_NAME="${{ github.event.pull_request.head.ref }}"
      #     # echo "::set-output name=main_file::functions.yaml"
      #     # echo "::set-output name=pr_file::main:${PR_BRANCH_NAME}/functions.yaml" 
  
      # - name: Set Output Variables
      #   id: set_output_vars
      #   run: |
      #     PR_BRANCH_NAME="${{ github.event.pull_request.head.ref }}"
      #     echo "MAIN_FILE=functions.yaml" >> $GITHUB_ENV
      #     git checkout main
      #     git fetch origin pull/${{ github.event.pull_request.number }}/head:pr${{ github.event.pull_request.head.ref }}
      #     git checkout pr${{ github.event.pull_request.head.ref }}
      #     echo "PR_FILE=functions.yaml" >> $GITHUB_ENV
      #     git checkout main
      #     echo $MAIN_FILE
      #     echo $PR_FILE

      # - name: Set Output Variables
      #   id: set_output_vars
      #   run: |
      #     PR_BRANCH_NAME="${{ github.event.pull_request.head.ref }}"
      #     echo "MAIN_FILE=$(cat functions.yaml)" >> $GITHUB_ENV
      #     echo main

      #     # Checkout the main branch
      #     git checkout main

      #     # Fetch the PR branch
      #     git fetch origin pull/${{ github.event.pull_request.number }}/head:pr${{ github.event.pull_request.head.ref }}

      #     # Checkout the PR branch
      #     git checkout pr${{ github.event.pull_request.head.ref }}
      #     echo "PR_FILE=$(cat functions.yaml)" >> $GITHUB_ENV
      #     echo "pr:  $(cat functions.yaml)"
      #     git checkout main

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.x

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyyaml
      - name: Set Main and PR YAML as environment variables
        id: set-environment-variables
        run: |
          MAIN_FILE_CONTENT=$(cat functions.yaml)  # Replace 'functions.yaml' with the actual filename
          PR_FILE_CONTENT=$(cat ${{ steps.changes.outputs.changed_files }})
          echo "::set-output name=MAIN_FILE_CONTENT::$MAIN_FILE_CONTENT"
          echo "::set-output name=PR_FILE_CONTENT::$PR_FILE_CONTENT"
          
      - name: Run Python Script
        env:
          MAIN_FILE: ${{ steps.set-environment-variables.outputs.MAIN_FILE_CONTENT }}
          PR_FILE: ${{ steps.set-environment-variables.outputs.PR_FILE_CONTENT }}
        run: |
          echo "MainFile: $MAIN_FILE"
          echo "PRFile: $PR_FILE"          
          python script.py "$MAIN_FILE" "$PR_FILE"
  
          echo "python script successful"
